name: CI/CD main branch with publish image to Azure Registry and deploy to Azure Container Instance

on:
#  push:
#    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
    steps:
    - uses: actions/checkout@v2
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'src/**'
            - '.env'
  ci-cd:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 'Set up JDK 1.11'
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: 'Cache Gradle packages'
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: 'Load environment variables'
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - name: 'Grant execute permission for gradlew'
        run: chmod +x gradlew

      - name: 'Build with Gradle'
        run: ./gradlew build

      - name: 'Test with Gradle'
        run: ./gradlew test

#      - name: 'SonarQube Scan'
#        uses: kitabisa/sonarqube-action@master
#        with:
#          host: ${{ secrets.SONARQUBE_HOST }}
#          login: ${{ secrets.SONARQUBE_TOKEN }}

      - name: 'Login Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Login to Azure Container Registry'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Build and push to Container Registry'
        run: |
          docker build -t ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}

      - name: 'Deploy to Azure Container Instances'
        uses: 'MartinSamanArata2018/aci-deploy@v1.0'
        with:
          ports: '8080'
          cpu: ${{ secrets.CONTAINER_INSTANCE_CPU }}
          memory: ${{ secrets.CONTAINER_INSTANCE_MEMORY }}
          env-file: '.env'
          name: ${{ secrets.IMAGE_NAME }}
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          image: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          dns-name-label: ${{ secrets.IMAGE_NAME }}
          location: 'brazil south'
